name: tests

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "master"

jobs:
  changes:
    name: Checking changed files
    runs-on: ubuntu-latest
    outputs:
      keepgoing: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: |
            *.{yaml,yml,py}
            **/*.{yaml,yml,py}
            tests
      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done
          echo ${{ steps.changed-files.outputs.any_changed }}

  tests:
    needs:
      - changes
    if: needs.changes.outputs.keepgoing == 'true'
    timeout-minutes: 720
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      max-parallel: 6
      matrix:
        config:
          - { python-version: 3.8, os: ubuntu-latest }
          - { python-version: 3.9, os: ubuntu-latest }
          - { python-version: "3.10", os: ubuntu-latest }
          - { python-version: 3.8, os: macos-latest }
          - { python-version: 3.9, os: macos-latest }
          - { python-version: "3.10", os: macos-latest }
    runs-on: ${{ matrix.config.os }}
    env:
      TZ: UTC
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.config.python-version }}
          cache: "pip"
          cache-dependency-path: |
            **/pyproject.toml

      - name: Install
        run: |
          python -m pip install .[test]
        shell: bash {0}

      - name: Test with pytest
        run: |
          python -m pytest
        shell: bash {0}

      - name: Show coverage
        run: |
          coverage report

      - name: Upload coverage to Codecov
        if: matrix.config.os == 'ubuntu-latest' && matrix.config.python-version == '3.10'
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          directory: ./coverage/reports/
          env_vars: ${{ format('OS={0},PYTHON={1}', matrix.config.os, matrix.config.python-version) }}
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true
